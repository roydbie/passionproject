{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/roydebie/OneDrive/NJ2020/Passion project/passionprojectgit/src/components/Location.js\";\nimport React, { Component } from 'react';\nimport { db } from '../services/firebase';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null,\n      peopleAtTheGym: null\n    };\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    });\n  }\n\n  componentDidMount() {\n    this.getLocation();\n    db.collection('atthegym').get().then(snapshot => {\n      const peopleAtTheGym = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        peopleAtTheGym.push(data);\n      });\n      this.setState({\n        peopleAtTheGym: peopleAtTheGym\n      });\n    }).catch(error => console.log(error));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'white'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Latitude: \", this.state.latitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", this.state.longitude]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexGrow: 1,\n          maxWidth: 752\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: this.state.peopleAtTheGym && this.state.peopleAtTheGym.map(data => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                    className: \"listItemPersonal\",\n                    children: (() => {\n                      switch (data.active.toString()) {\n                        case \"true\":\n                          return /*#__PURE__*/_jsxDEV(ListItemText, {\n                            primary: data.name,\n                            secondary: \"is currently at the gym\",\n                            color: \"secondary.main\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 73,\n                            columnNumber: 61\n                          }, this);\n\n                        case \"false\":\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            children: [data.name, \" is currently not at the gym\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 79,\n                            columnNumber: 80\n                          }, this);\n\n                        default:\n                          return \"\";\n                      }\n                    })()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/Passion project/passionprojectgit/src/components/Location.js"],"names":["React","Component","db","List","ListItem","ListItemSecondaryAction","ListItemText","IconButton","Grid","Location","constructor","props","state","latitude","longitude","userAddress","peopleAtTheGym","getLocation","bind","getCoordinates","navigator","geolocation","getCurrentPosition","console","log","position","setState","coords","componentDidMount","collection","get","then","snapshot","forEach","doc","data","push","catch","error","render","color","flexGrow","maxWidth","map","active","toString","name"],"mappings":"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","sourcesContent":["import React , { Component } from 'react';\nimport { db } from '../services/firebase';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nclass Location extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            latitude: null,\n            longitude: null,\n            userAddress: null,\n            peopleAtTheGym: null\n        };\n        this.getLocation = this.getLocation.bind(this);\n        this.getCoordinates = this.getCoordinates.bind(this);\n    }\n\n    getLocation(){\n        if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        } else {\n            console.log('Geolocation is not supported by this browser.')\n        }\n    }\n\n    getCoordinates(position){\n        this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        })\n    }\n\n    componentDidMount(){\n        this.getLocation();\n\n        db.collection('atthegym').get().then( snapshot => {\n            const peopleAtTheGym = [];\n            snapshot.forEach( doc => {\n                const data = doc.data();\n                peopleAtTheGym.push(data);\n            })\n            this.setState({peopleAtTheGym: peopleAtTheGym})\n        }).catch( error => console.log(error));\n    }\n\n    render(){\n\n        return(\n            <div style={{color: 'white'}}>\n                <br></br>\n                <p>Latitude: {this.state.latitude}</p>\n                <p>Longitude: {this.state.longitude}</p>\n                <div style={{flexGrow: 1, maxWidth: 752}}>\n                    <Grid item xs={12} md={6}>\n                        <div>\n                            <List>\n                            {\n                                this.state.peopleAtTheGym && this.state.peopleAtTheGym.map( (data) => {\n                                    return (\n                                        <div>\n                                            <ListItem className=\"listItemPersonal\">\n                                                \n                                                {\n                                                    (() => {switch (data.active.toString()) {\n                                                        case \"true\":   return (\n                                                            <ListItemText\n                                                            primary={data.name}\n                                                            secondary=\"is currently at the gym\"\n                                                            color=\"secondary.main\"\n                                                            />\n                                                            );\n                                                        case \"false\":   return <div>{data.name} is currently not at the gym</div>;\n                                                        default:      return \"\";\n                                                    }\n                                                    })()\n                                                }\n                                            </ListItem>\n                                            <br></br>\n                                        </div>\n                                    )\n                                })\n                            }\n                            </List>\n                        </div>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}