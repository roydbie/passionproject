{"ast":null,"code":"import React, { Component } from 'react';\n\nclass Location extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: null,\n      longitude: null,\n      userAddress: null\n    };\n    this.getLocation = this.getLocation.bind(this);\n    this.getCoordinates = this.getCoordinates.bind(this);\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\n    } else {\n      console.log('Geolocation is not supported by this browser.');\n    }\n  }\n\n  getCoordinates(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    });\n  }\n\n}\n\nexport default Location;","map":{"version":3,"sources":["/Users/roydebie/OneDrive/NJ2020/Passion project/passionprojectgit/src/components/Location.js"],"names":["React","Component","Location","constructor","props","state","latitude","longitude","userAddress","getLocation","bind","getCoordinates","navigator","geolocation","getCurrentPosition","console","log","position","setState","coords"],"mappings":"AAAA,OAAOA,KAAP,IAAiBC,SAAjB,QAAkC,OAAlC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAE7BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,SAAS,EAAE,IAFF;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDD,EAAAA,WAAW,GAAE;AACT,QAAGG,SAAS,CAACC,WAAb,EAA0B;AACtBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKH,cAA9C;AACH,KAFD,MAEO;AACHI,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACH;AACJ;;AAEDL,EAAAA,cAAc,CAACM,QAAD,EAAU;AACpB,SAAKC,QAAL,CAAc;AACVZ,MAAAA,QAAQ,EAAEW,QAAQ,CAACE,MAAT,CAAgBb,QADhB;AAEVC,MAAAA,SAAS,EAAEU,QAAQ,CAACE,MAAT,CAAgBZ;AAFjB,KAAd;AAIH;;AA1B4B;;AA6BjC,eAAeL,QAAf","sourcesContent":["import React , { Component } from 'react';\n\nclass Location extends Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            latitude: null,\n            longitude: null,\n            userAddress: null\n        };\n        this.getLocation = this.getLocation.bind(this);\n        this.getCoordinates = this.getCoordinates.bind(this);\n    }\n\n    getLocation(){\n        if(navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(this.getCoordinates);\n        } else {\n            console.log('Geolocation is not supported by this browser.')\n        }\n    }\n\n    getCoordinates(position){\n        this.setState({\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        })\n    }\n}\n\nexport default Location;"]},"metadata":{},"sourceType":"module"}